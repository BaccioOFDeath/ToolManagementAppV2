Program Structure Visualization
==============================
Folder: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Models
-----------------------------------------------------------------------------------------------------
  File: ActivityLog.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Models\ActivityLog.cs
    Class: ActivityLog
      Visibility: public
      Property: public int LogID
      Property: public int UserID
      Property: public string UserName
      Property: public string Action
      Property: public DateTime Timestamp

  File: Customer.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Models\Customer.cs
    Class: Customer
      Visibility: public
      Property: public int CustomerID
      Property: public string Name
      Property: public string Contact
      Property: public string Email
      Property: public string Phone
      Property: public string Address

  File: Rental.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Models\Rental.cs
    Class: Rental
      Visibility: public
      Property: public int RentalID
      Property: public int ToolID
      Property: public int CustomerID
      Property: public DateTime RentalDate
      Property: public DateTime DueDate

  File: Tool.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Models\Tool.cs
    Class: Tool
      Visibility: public
      Field: public int OnHand
      Field: public string Purchased
      Property: public string ToolID
      Property: public string Name
      Property: public string PartNumber
      Property: public string Description
      Property: public string Brand
      Property: public string Location
      Property: public int QuantityOnHand
      Property: public int RentedQuantity
      Property: public string Supplier
      Property: public string Notes
      Property: public bool IsCheckedOut
      Property: public string CheckedOutBy
      Property: public string ToolImagePath

  File: User.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Models\User.cs
    Class: ObservableObject
      Visibility: public
      Property: public int UserID
      Property: public string UserName
      Property: public string Password
      Property: public string UserPhotoPath
      Property: public bool IsAdmin
      Property: public BitmapImage PhotoBitmap
      Property: public string Email
      Property: public string Phone
      Property: public string Address
      Property: public string Role


Folder: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services
-------------------------------------------------------------------------------------------------------
  File: ActivityLogService.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services\ActivityLogService.cs
    Class: ActivityLogService
      Visibility: public
      Field: var p =
      Field: var p =
      Method: private public ActivityLogService(DatabaseService dbService)
      Method: public void LogAction(int userID, string userName, string action)
      Method: private new SQLiteParameter("@UserID",   userID)
      Method: private new SQLiteParameter("@UserName", userName)
      Method: private new SQLiteParameter("@Action",   action)
      Method: public List<ActivityLog> GetRecentLogs(int count = 50)
      Method: public void PurgeOldLogs(DateTime threshold)
      Method: private ActivityLog MapLog(IDataRecord r) => new()

  File: CustomerService.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services\CustomerService.cs
    Class: CustomerService
      Visibility: public
      Field: var lines =
      Field: var headers =
      Field: var cols =
      Field: var all =
      Field: var p =
      Field: var p =
      Method: private public CustomerService(DatabaseService dbService)
      Method: public void ImportCustomersFromCsv(string filePath, IDictionary<string, string> map)
      Method: private string get(string prop)
      Method: public void ExportCustomersToCsv(string filePath)
      Method: public List<Customer> GetAllCustomers()
      Method: public List<Customer> SearchCustomers(string searchTerm)
      Method: public Customer GetCustomerByID(int customerID)
      Method: public void AddCustomer(Customer customer)
      Method: private new SQLiteParameter("@Name",    customer.Name)
      Method: private new SQLiteParameter("@Email",   customer.Email)
      Method: private new SQLiteParameter("@Contact", customer.Contact)
      Method: private new SQLiteParameter("@Phone",   customer.Phone)
      Method: private new SQLiteParameter("@Address", customer.Address)
      Method: public void UpdateCustomer(Customer customer)

  File: DatabaseService.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services\DatabaseService.cs
    Class: DatabaseService
      Visibility: public
      Property: public string ConnectionString
      Method: private public DatabaseService(string dbPath)
      Method: private void InitializeDatabase()
      Method: private void EnsureColumn(string table, string column, string type)
      Method: public void BackupDatabase(string backupFilePath)

  File: Printer.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services\Printer.cs
    Class: Printer
      Visibility: public
      Field: var list =
      Field: var logoPath =
      Field: var doc =
      Field: var preview =
      Field: var path =
      Field: var headerContainer =
      Field: var headerStack =
      Field: var row =
      Field: var panel =
      Field: var grid =
      Field: var imgBorder =
      Field: var bmp =
      Method: private public Printer(SettingsService settingsService)
      Method: public void PrintTools(IEnumerable<Tool> tools, string title, string currentUserName = null)
      Method: private FlowDocument BuildDocument(List<Tool> tools, string title, string logoPath)
      Method: private StackPanel CreateToolRow(Tool tool)
      Method: private Border CreateOptimizedImage(string path)
      Method: private void AddCompanyLogo(StackPanel host, string logoPath)
      Method: private void AddTitle(StackPanel host, string title)
    Class: DocumentPaginator
      Visibility: private
      Field: var page =
      Field: var dv =
      Field: var text =
      Field: var x =
      Field: var y =
      Field: var cv =
      Method: private public CustomDocumentPaginator(DocumentPaginator inner, Typeface tf, double fs)

  File: RentalService.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services\RentalService.cs
    Class: RentalService
      Visibility: public
      Method: private public RentalService(DatabaseService dbService)
      Method: public void RentTool(string toolID, int customerID, DateTime rentalDate, DateTime dueDate)

  File: ReportService.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services\ReportService.cs
    Class: ReportService
      Visibility: public
      Field: var totalTools =
      Field: var totalRentals =
      Field: var totalActiveRentals =
      Field: var totalCustomers =
      Field: var totalUsers =
      Field: var p =
      Method: public FlowDocument GenerateInventoryReport()
      Method: private return BuildReport("Tool Inventory Report", lines)
      Method: public FlowDocument GenerateRentalReport(bool activeOnly = true)
      Method: private return BuildReport(title, lines)
      Method: public FlowDocument GenerateActivityLogReport()
      Method: private return BuildReport("Activity Log Report", lines)
      Method: public FlowDocument GenerateCustomerReport()
      Method: private return BuildReport("Customer Report", lines)
      Method: public FlowDocument GenerateUserReport()
      Method: private return BuildReport("User Report", lines)
      Method: public FlowDocument GenerateSummaryReport()
      Method: private return BuildReport("Application Summary Report", lines)
      Method: private FlowDocument BuildReport(string title, IEnumerable<string> lines)

  File: SettingsService.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services\SettingsService.cs
    Class: SettingsService
      Visibility: public
      Field: var dict =
      Field: var p =
      Method: private ON CONFLICT(Key)
      Method: private public SettingsService(DatabaseService dbService)
      Method: public void SaveSetting(string key, string value)
      Method: private new SQLiteParameter("@Key", key)
      Method: private new SQLiteParameter("@Value", value)
      Method: public string GetSetting(string key)
      Method: public void UpdateSettings(Dictionary<string, string> settings)
      Method: private new SQLiteParameter("@Key", kv.Key)
      Method: private new SQLiteParameter("@Value", kv.Value)
      Method: public void DeleteSetting(string key)

  File: ToolService.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services\ToolService.cs
    Class: ToolService
      Visibility: public
      Field: var terms =
      Field: var sb =
      Field: WHERE ToolID =
      Field: var newStatus =
      Field: var time =
      Field: var by =
      Field: var lines =
      Field: var headers =
      Field: var cols =
      Method: private public ToolService(DatabaseService dbService)
      Method: public List<Tool> GetAllTools()
      Method: public Tool GetToolByID(string toolID)
      Method: public List<Tool> SearchTools(string searchText)
      Method: public void AddTool(Tool tool)
      Method: private new SQLiteParameter("@Name",  tool.Name)
      Method: private new SQLiteParameter("@Desc",  (object)tool.Description ?? DBNull.Value)
      Method: private new SQLiteParameter("@Loc",   tool.Location)
      Method: private new SQLiteParameter("@Brand", tool.Brand)
      Method: private new SQLiteParameter("@PN",    tool.PartNumber)
      Method: private new SQLiteParameter("@Sup",   (object)tool.Supplier ?? DBNull.Value)
      Method: private new SQLiteParameter("@PD",    (object)tool.PurchasedDate ?? DBNull.Value)
      Method: private new SQLiteParameter("@Notes", (object)tool.Notes ?? DBNull.Value)
      Method: private new SQLiteParameter("@Avail", tool.QuantityOnHand)
      Method: private new SQLiteParameter("@Rent",  tool.RentedQuantity)
      Method: public void UpdateTool(Tool tool)
      Method: private new SQLiteParameter("@ID",   tool.ToolID)
      Method: private new SQLiteParameter("@Name", tool.Name)
      Method: private new SQLiteParameter("@Desc",  (object)tool.Description ?? DBNull.Value)
      Method: private new SQLiteParameter("@Loc",   tool.Location)
      Method: private new SQLiteParameter("@Brand", tool.Brand)
      Method: private new SQLiteParameter("@PN",    tool.PartNumber)
      Method: private new SQLiteParameter("@Sup",   (object)tool.Supplier ?? DBNull.Value)
      Method: private new SQLiteParameter("@PD",    (object)tool.PurchasedDate ?? DBNull.Value)
      Method: private new SQLiteParameter("@Notes", (object)tool.Notes ?? DBNull.Value)
      Method: private new SQLiteParameter("@Avail", tool.QuantityOnHand)
      Method: private new SQLiteParameter("@Rent",  tool.RentedQuantity)
      Method: private new SQLiteParameter("@Out",   tool.IsCheckedOut ? 1 : 0)
      Method: private new SQLiteParameter("@By",    (object)tool.CheckedOutBy ?? DBNull.Value)
      Method: private new SQLiteParameter("@Time",  (object)tool.CheckedOutTime ?? DBNull.Value)
      Method: private new SQLiteParameter("@Img",   (object)tool.ToolImagePath ?? DBNull.Value)
      Method: public void UpdateToolQuantities(string toolID, int qtyChange, bool isRental)
      Method: private new SQLiteParameter("@ID", toolID)
      Method: private new SQLiteParameter("@Q",  qtyChange)
      Method: public void DeleteTool(string toolID)
      Method: public void ToggleToolCheckOutStatus(string toolID, string currentUser)
      Method: private new SQLiteParameter("@Out",  newStatus)
      Method: private new SQLiteParameter("@By",   by)
      Method: private new SQLiteParameter("@Time", time)
      Method: private new SQLiteParameter("@ID",   toolID)
      Method: public List<Tool> GetToolsCheckedOutBy(string userName)
      Method: public void UpdateToolImage(string toolID, string imagePath)
      Method: private new SQLiteParameter("@Img", imagePath)
      Method: private new SQLiteParameter("@ID",  toolID)
      Method: public void ImportToolsFromCsv(string filePath, IDictionary<string, string> map)
      Method: private string get(string prop)
      Method: public void ExportToolsToCsv(string filePath)
      Method: private Tool MapTool(IDataRecord r) => new()

  File: UserService.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Services\UserService.cs
    Class: UserService
      Visibility: public
      Field: var u =
      Field: WHERE UserID =
      Field: var sql =
      Field: var sql =
      Field: var p =
      Method: private public UserService(DatabaseService dbService)
      Method: public List<User> GetAllUsers()
      Method: public User GetUserByID(int userID)
      Method: public User AuthenticateUser(string userName, string password)
      Method: public User GetCurrentUser()
      Method: public void AddUser(User user)
      Method: private SELECT last_insert_rowid()
      Method: private new SQLiteParameter("@UserName", user.UserName)
      Method: private new SQLiteParameter("@Password", user.Password ?? string.Empty)
      Method: private new SQLiteParameter("@Photo",    (object)user.UserPhotoPath ?? DBNull.Value)
      Method: private new SQLiteParameter("@Admin",    user.IsAdmin ? 1 : 0)
      Method: private new SQLiteParameter("@Email",    (object)user.Email ?? DBNull.Value)
      Method: private new SQLiteParameter("@Phone",    (object)user.Phone ?? DBNull.Value)
      Method: private new SQLiteParameter("@Address",  (object)user.Address ?? DBNull.Value)
      Method: private new SQLiteParameter("@Role",     (object)user.Role ?? DBNull.Value)
      Method: public void UpdateUser(User user)
      Method: private new SQLiteParameter("@UserID",   user.UserID)
      Method: private new SQLiteParameter("@UserName", user.UserName)
      Method: private new SQLiteParameter("@Password", user.Password ?? string.Empty)
      Method: private new SQLiteParameter("@Photo",    (object)user.UserPhotoPath ?? DBNull.Value)
      Method: private new SQLiteParameter("@Admin",    user.IsAdmin ? 1 : 0)
      Method: private new SQLiteParameter("@Email",    (object)user.Email ?? DBNull.Value)
      Method: private new SQLiteParameter("@Phone",    (object)user.Phone ?? DBNull.Value)
      Method: private new SQLiteParameter("@Address",  (object)user.Address ?? DBNull.Value)
      Method: private new SQLiteParameter("@Role",     (object)user.Role ?? DBNull.Value)
      Method: public void ChangeUserPassword(int userID, string newPassword)
      Method: private new SQLiteParameter("@Pwd", newPassword)
      Method: private new SQLiteParameter("@ID",  userID)
      Method: public void DeleteUser(int userID)
      Method: private User MapUser(IDataRecord rdr)


Folder: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Utilities
--------------------------------------------------------------------------------------------------------
  File: BooleanToAdminConverter.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Utilities\BooleanToAdminConverter.cs
    Class: IValueConverter
      Visibility: public
      Method: public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
      Method: public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)

  File: CheckOutStatusConverter.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Utilities\CheckOutStatusConverter.cs
    Class: IValueConverter
      Visibility: public
      Method: public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
      Method: public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)

  File: InverseBooleanConverter.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Utilities\InverseBooleanConverter.cs
    Class: IValueConverter
      Visibility: public
      Method: public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
      Method: public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)

  File: NonEmptyStringToBoolConverter.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Utilities\NonEmptyStringToBoolConverter.cs
    Class: IValueConverter
      Visibility: public
      Method: public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
      Method: public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)

  File: NullToDefaultImageConverter.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Utilities\NullToDefaultImageConverter.cs
    Class: IValueConverter
      Visibility: public
      Field: string type =
      Field: var uri =
      Method: public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
      Method: private BitmapImage LoadFromResource(string fileName)
      Method: public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)


Folder: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\ViewModels
---------------------------------------------------------------------------------------------------------
  File: ImportMappingViewModel.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\ViewModels\ImportMappingViewModel.cs
    Class: ObservableObject
      Visibility: public
      Field: public string SelectedColumn
      Property: public string PropertyName
      Property: public IReadOnlyList<string> AvailableColumns
      Method: private public FieldMapping(string propertyName, IReadOnlyList<string> availableColumns)
    Class: ObservableObject
      Visibility: public
      Field: var headerList =
      Property: public IReadOnlyList<string> ColumnHeaders
      Property: public ObservableCollection<FieldMapping> Mappings
      Method: private public ImportMappingViewModel(IEnumerable<string> headers, IEnumerable<string> properties)

  File: MainViewModel.cs
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\ViewModels\MainViewModel.cs
    Class: ObservableObject
      Visibility: public
      Field: public Tool SelectedTool
      Field: public User SelectedUser
      Field: public Customer SelectedCustomer
      Field: public Rental SelectedRental
      Field: public string CurrentUserName
      Field: public BitmapImage CurrentUserPhoto
      Field: public BitmapImage HeaderLogo
      Field: var path =
      Field: var lines =
      Field: var headers =
      Field: var fields =
      Field: var folder =
      Field: var dest =
      Field: var bmp =
      Field: var lines =
      Field: var headers =
      Field: var fields =
      Field: var dlg =
      Field: var dlg =
      Field: var win =
      Field: static class ObservableCollectionExtensions
      Property: public string NewCustomerName
      Property: public string NewCustomerEmail
      Property: public string NewCustomerContact
      Property: public string NewCustomerPhone
      Property: public string NewCustomerAddress
      Property: public string SearchTerm
      Property: public string UserPassword
      Property: public string NewPassword
      Property: public string ConfirmPassword
      Property: public IRelayCommand SearchCommand
      Property: public IRelayCommand AddToolCommand
      Property: public IRelayCommand UpdateToolCommand
      Property: public IRelayCommand ImportToolsCommand
      Property: public IRelayCommand ExportToolsCommand
      Property: public IRelayCommand DeleteToolCommand
      Property: public IRelayCommand LoadUsersCommand
      Property: public IRelayCommand ChooseProfilePicCommand
      Property: public IRelayCommand UploadUserPhotoCommand
      Property: public IRelayCommand LoadCustomersCommand
      Property: public IRelayCommand AddCustomerCommand
      Property: public IRelayCommand UpdateCustomerCommand
      Property: public IRelayCommand ImportCustomersCommand
      Property: public IRelayCommand ExportCustomersCommand
      Property: public IRelayCommand DeleteCustomerCommand
      Property: public IRelayCommand LoadActiveRentalsCommand
      Property: public IRelayCommand LoadOverdueRentalsCommand
      Property: public IRelayCommand ReturnToolCommand
      Property: public IRelayCommand ExtendRentalCommand
      Method: private void InitializeData()
      Method: private void LoadTools()
      Method: private void LoadCheckedOutTools()
      Method: private void SearchTools()
      Method: private void AddTool()
      Method: private void UpdateTool()
      Method: private void ImportTools()
      Method: private void ExportTools()
      Method: private void DeleteTool()
      Method: public void LoadUsers()
      Method: private void LoadCurrentUser()
      Method: private void ChooseProfilePic() => UploadPhotoForUser((User)Application.Current.Properties["CurrentUser"])
      Method: private void UploadPhotoForUser(User u)
      Method: private void LoadCustomers()
      Method: private void AddCustomer()
      Method: private void UpdateCustomer()
      Method: private void ImportCustomers()
      Method: private void ExportCustomers()
      Method: private void DeleteCustomer()
      Method: private void LoadActiveRentals()
      Method: private void LoadOverdueRentals()
      Method: private void ReturnSelectedRental()
      Method: private void ExtendSelectedRental()
      Method: private bool ShowFileDialog(string filter, out string path)
      Method: private bool ShowSaveDialog(string defaultName, out string path)
      Method: private bool ShowMappingWindow(IEnumerable<string> headers, IEnumerable<string> fields, out Dictionary<string, string> map)
      Method: private void ShowInfo(string msg) => MessageBox.Show(msg, "Info", MessageBoxButton.OK, MessageBoxImage.Information)
      Method: private void ShowWarning(string msg) => MessageBox.Show(msg, "Warning", MessageBoxButton.OK, MessageBoxImage.Warning)


Folder: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2
----------------------------------------------------------------------------------------------
  File: App.xaml
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\App.xaml
    XAML Element: Application


Folder: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Views
----------------------------------------------------------------------------------------------------
  File: AvatarSelectionWindow.xaml
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Views\AvatarSelectionWindow.xaml
    XAML Element: DockPanel
      Attribute: Margin="10"
    XAML Element: Border
      Attribute: DockPanel.Dock="Top"
      Attribute: Background="#DDD"
      Attribute: Padding="10"
    XAML Element: ListBox
    XAML Element: ItemsPanelTemplate
    XAML Element: UniformGrid
      Attribute: Columns="6"
      Attribute: HorizontalAlignment="Center"
      Attribute: VerticalAlignment="Center"
    XAML Element: ListBox
    XAML Element: DataTemplate
    XAML Element: Border
      Attribute: Background="#dadada"
      Attribute: CornerRadius="5"
      Attribute: Padding="10"
    XAML Element: Image
      Attribute: Source="{Binding}"
      Attribute: Width="100"
      Attribute: Height="100"
    XAML Element: StatusBar
      Attribute: DockPanel.Dock="Bottom"
      Attribute: Background="LightGray"
      Attribute: Height="25"
    XAML Element: StatusBarItem
      Attribute: Content="Ready"

  File: ImportMappingWindow.xaml
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Views\ImportMappingWindow.xaml
    XAML Element: DockPanel
      Attribute: Margin="10"
    XAML Element: Border
      Attribute: DockPanel.Dock="Top"
      Attribute: Background="#DDD"
      Attribute: Padding="10"
    XAML Element: DataGrid
    XAML Element: DataGridTemplateColumn
      Attribute: Header="CSV
    XAML Element: DataGridTemplateColumn
    XAML Element: DataTemplate
    XAML Element: TextBlock
      Attribute: Text="{Binding
    XAML Element: DataGridTemplateColumn
    XAML Element: DataTemplate
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: HorizontalAlignment="Right"
      Attribute: DockPanel.Dock="Bottom"
    XAML Element: Button
      Attribute: Content="OK"
      Attribute: Width="75"
      Attribute: Margin="5"
      Attribute: Click="Ok_Click"
    XAML Element: Button
      Attribute: Content="Cancel"
      Attribute: Width="75"
      Attribute: Margin="5"
      Attribute: Click="Cancel_Click"

  File: LoginWindow.xaml
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Views\LoginWindow.xaml
    XAML Element: Window
    XAML Element: local
      Attribute: x:Key="NullToDefaultImageConverter"
    XAML Element: local
      Attribute: x:Key="BooleanToAdminConverter"
    XAML Element: DockPanel
    XAML Element: Border
      Attribute: DockPanel.Dock="Top"
      Attribute: Background="#DDD"
      Attribute: Padding="10"
    XAML Element: DockPanel
    XAML Element: Image
      Attribute: x:Name="LoginLogo"
      Attribute: Width="50"
      Attribute: Height="50"
      Attribute: Margin="10"
    XAML Element: Grid
      Attribute: Margin="10"
    XAML Element: Grid
    XAML Element: RowDefinition
      Attribute: Height="Auto"
    XAML Element: RowDefinition
      Attribute: Height="*"
    XAML Element: ListBox
    XAML Element: Style
      Attribute: TargetType="ListBoxItem"
    XAML Element: Setter
      Attribute: Property="Background"
      Attribute: Value="Transparent"
    XAML Element: Setter
      Attribute: Property="BorderThickness"
      Attribute: Value="0"
    XAML Element: Setter
      Attribute: Property="Padding"
      Attribute: Value="0"
    XAML Element: Setter
      Attribute: Property="Margin"
      Attribute: Value="0"
    XAML Element: Setter
      Attribute: Property="Template"
    XAML Element: Setter
    XAML Element: ControlTemplate
      Attribute: TargetType="ListBoxItem"
    XAML Element: ContentPresenter
    XAML Element: ListBox
    XAML Element: ItemsPanelTemplate
    XAML Element: WrapPanel
      Attribute: Orientation="Horizontal"
      Attribute: HorizontalAlignment="Center"
    XAML Element: ListBox
    XAML Element: DataTemplate
    XAML Element: StackPanel
      Attribute: Width="120"
      Attribute: Margin="5"
    XAML Element: StackPanel

  File: MainWindow.xaml
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Views\MainWindow.xaml
    XAML Element: DockPanel
      Attribute: Margin="10"
    XAML Element: DockPanel
    XAML Element: local
      Attribute: x:Key="CheckOutStatusConverter"
    XAML Element: local
      Attribute: x:Key="NullToDefaultImageConverter"
    XAML Element: local
      Attribute: x:Key="InverseBooleanConverter"
    XAML Element: local
      Attribute: x:Key="NonEmptyStringToBoolConverter"
    XAML Element: DataTemplate
      Attribute: x:Key="CheckOutButtonTemplate"
    XAML Element: Border
      Attribute: DockPanel.Dock="Top"
      Attribute: Background="#DDD"
      Attribute: Padding="10"
    XAML Element: DockPanel
    XAML Element: Image
      Attribute: x:Name="HeaderIcon"
      Attribute: Source="{Binding
      Attribute: Width="50"
      Attribute: Height="50"
    XAML Element: StackPanel
      Attribute: DockPanel.Dock="Right"
      Attribute: Orientation="Horizontal"
      Attribute: HorizontalAlignment="Right"
      Attribute: Margin="5"
    XAML Element: Image
      Attribute: Source="{Binding
      Attribute: Width="50"
      Attribute: Height="50"
      Attribute: Margin="0,0,10,0"
    XAML Element: StackPanel
      Attribute: Orientation="Vertical"
    XAML Element: TextBlock
      Attribute: Text="{Binding
      Attribute: FontWeight="Bold"
      Attribute: Margin="0,0,0,5"
    XAML Element: Button
      Attribute: Content="Logout"
      Attribute: Click="LogoutButton_Click"
      Attribute: Width="80"
    XAML Element: Grid
      Attribute: DockPanel.Dock="Top"
    XAML Element: Grid
    XAML Element: RowDefinition
      Attribute: Height="*"
    XAML Element: RowDefinition
      Attribute: Height="Auto"
    XAML Element: TabControl
      Attribute: x:Name="MyTabControl"
      Attribute: Margin="5"
      Attribute: Grid.Row="0"
    XAML Element: TabItem
      Attribute: Header="Search
    XAML Element: Grid
      Attribute: Margin="5"
    XAML Element: Grid
    XAML Element: RowDefinition
      Attribute: Height="Auto"
    XAML Element: RowDefinition
      Attribute: Height="*"
    XAML Element: RowDefinition
      Attribute: Height="150"
    XAML Element: xctk
      Attribute: x:Name="SearchInput"
      Attribute: Width="300"
      Attribute: Margin="10,0"
      Attribute: Watermark="Search
      Attribute: TextChanged="SearchInput_TextChanged"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
    XAML Element: Button
      Attribute: Content="Print
      Attribute: Click="PrintSearchResults_Click"
      Attribute: Height="20"
      Attribute: Width="160"
      Attribute: Margin="10,0"
    XAML Element: Button
      Attribute: Content="Print
      Attribute: Click="PrintMyCheckedOutTools_Click"
      Attribute: Height="20"
      Attribute: Width="160"
      Attribute: Margin="10,0"
    XAML Element: ListView
      Attribute: x:Name="SearchResultsList"
      Attribute: ItemsSource="{Binding
      Attribute: Margin="10"
      Attribute: Grid.Row="1"
      Attribute: ScrollViewer.VerticalScrollBarVisibility="Auto"
    XAML Element: ListView
    XAML Element: GridView
    XAML Element: GridViewColumn
      Attribute: Header="Action"
      Attribute: Width="80"
      Attribute: CellTemplate="{StaticResource
    XAML Element: GridViewColumn
      Attribute: Header="ID"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="60"
    XAML Element: GridViewColumn
      Attribute: Header="Name"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="120"
    XAML Element: GridViewColumn
      Attribute: Header="Location"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="70"
    XAML Element: GridViewColumn
      Attribute: Header="Part
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Brand"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Description"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="380"
    XAML Element: GridViewColumn
      Attribute: Header="Quantity"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="60"
    XAML Element: GridViewColumn
      Attribute: Header="Supplier"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Purchased
      Attribute: Width="80"
    XAML Element: GridViewColumn
    XAML Element: DataTemplate
    XAML Element: TextBlock
      Attribute: Text="{Binding
      Attribute: StringFormat=\{0:yyyy-MM-dd\}}"
    XAML Element: GridViewColumn
      Attribute: Header="Notes"
      Attribute: Width="200"
    XAML Element: GridViewColumn
    XAML Element: DataTemplate
    XAML Element: TextBlock
      Attribute: Text="{Binding
      Attribute: TextWrapping="Wrap"
    XAML Element: GridViewColumn
      Attribute: Header="Image"
      Attribute: Width="100"
    XAML Element: GridViewColumn
    XAML Element: DataTemplate
    XAML Element: Image
    XAML Element: Border
      Attribute: BorderBrush="Gray"
      Attribute: BorderThickness="1"
      Attribute: Padding="2"
      Attribute: Background="White"
    XAML Element: Button
      Attribute: Content="Choose
      Attribute: Click="ChooseUserProfilePicButton_Click"
      Attribute: Width="150"
      Attribute: Height="20"
      Attribute: HorizontalAlignment="Right"
      Attribute: VerticalAlignment="Top"
      Attribute: Grid.RowSpan="2"
    XAML Element: ListView
      Attribute: x:Name="CheckedOutToolsList"
      Attribute: ItemsSource="{Binding
      Attribute: Margin="10"
      Attribute: Grid.Row="2"
    XAML Element: ListView
    XAML Element: GridView
    XAML Element: GridViewColumn
      Attribute: Header="Action"
      Attribute: Width="80"
    XAML Element: GridViewColumn
    XAML Element: DataTemplate
    XAML Element: GridViewColumn
      Attribute: Header="Tool
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="60"
    XAML Element: GridViewColumn
      Attribute: Header="Description"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="380"
    XAML Element: GridViewColumn
      Attribute: Header="Checked
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="150"
    XAML Element: GridViewColumn
      Attribute: Header="Checked
      Attribute: DisplayMemberBinding="{Binding
      Attribute: StringFormat=\{0:G\}}"
      Attribute: Width="150"
    XAML Element: GridViewColumn
      Attribute: Header="Location"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: TabItem
      Attribute: Header="Tool
    XAML Element: Grid
    XAML Element: Grid
    XAML Element: ColumnDefinition
      Attribute: Width="350"
    XAML Element: ColumnDefinition
    XAML Element: GroupBox
      Attribute: Grid.Column="0"
      Attribute: Header="Tool
      Attribute: Margin="5"
    XAML Element: StackPanel
    XAML Element: xctk
      Attribute: x:Name="ToolIDInput"
      Attribute: Watermark="Tool
      Attribute: Margin="0,5"
    XAML Element: xctk
      Attribute: x:Name="PartNumberInput"
      Attribute: Watermark="Part
      Attribute: Margin="0,5"
    XAML Element: xctk
      Attribute: x:Name="ToolNameInput"
      Attribute: Watermark="Tool
      Attribute: Margin="0,5"
    XAML Element: xctk
      Attribute: x:Name="BrandInput"
      Attribute: Watermark="Brand"
      Attribute: Margin="0,5"
    XAML Element: xctk
      Attribute: x:Name="LocationInput"
      Attribute: Watermark="Location"
      Attribute: Margin="0,5"
    XAML Element: xctk
      Attribute: x:Name="QuantityInput"
      Attribute: Watermark="Quantity
      Attribute: Margin="0,5"
    XAML Element: xctk
      Attribute: x:Name="SupplierInput"
      Attribute: Watermark="Supplier"
      Attribute: Margin="0,5"
    XAML Element: xctk
      Attribute: x:Name="PurchasedInput"
      Attribute: Watermark="Purchased
      Attribute: Margin="0,5"
    XAML Element: xctk
      Attribute: x:Name="NotesInput"
      Attribute: Watermark="Notes"
      Attribute: TextWrapping="Wrap"
      Attribute: Margin="0,5"
      Attribute: Height="60"
      Attribute: AcceptsReturn="True"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: HorizontalAlignment="Center"
    XAML Element: Button
      Attribute: Content="Add"
      Attribute: Click="AddButton_Click"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Update"
      Attribute: Click="UpdateButton_Click"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Delete"
      Attribute: Click="DeleteButton_Click"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Add/Change
      Attribute: Click="ChangeToolImage_Click"
      Attribute: Margin="5"
    XAML Element: ListView
      Attribute: x:Name="ToolsList"
      Attribute: Grid.Column="1"
      Attribute: ItemsSource="{Binding
      Attribute: SelectionChanged="ToolsList_SelectionChanged"
      Attribute: Margin="5"
    XAML Element: ListView
    XAML Element: GridView
    XAML Element: GridViewColumn
      Attribute: Header="ID"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="60"
    XAML Element: GridViewColumn
      Attribute: Header="Part
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Brand"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Location"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Quantity"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="80"
    XAML Element: GridViewColumn
      Attribute: Header="Supplier"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Purchased"
      Attribute: Width="120"
    XAML Element: GridViewColumn
    XAML Element: DataTemplate
    XAML Element: TextBlock
      Attribute: Text="{Binding
      Attribute: StringFormat=\{0:yyyy-MM-dd\}}"
    XAML Element: GridViewColumn
      Attribute: Header="Notes"
    XAML Element: GridViewColumn
    XAML Element: DataTemplate
    XAML Element: TextBlock
      Attribute: Text="{Binding
      Attribute: TextWrapping="Wrap"
      Attribute: Width="400"
    XAML Element: GridViewColumn
      Attribute: Header="Image"
      Attribute: Width="100"
    XAML Element: GridViewColumn
    XAML Element: DataTemplate
    XAML Element: Image
    XAML Element: Border
      Attribute: BorderBrush="Gray"
      Attribute: BorderThickness="1"
      Attribute: Padding="2"
      Attribute: Background="White"
    XAML Element: TabItem
      Attribute: Header="Customers"
    XAML Element: Grid
    XAML Element: Grid
    XAML Element: ColumnDefinition
      Attribute: Width="350"
    XAML Element: ColumnDefinition
    XAML Element: GroupBox
      Attribute: Header="Customer
      Attribute: Grid.Column="0"
      Attribute: Margin="5"
    XAML Element: StackPanel
    XAML Element: xctk
      Attribute: x:Name="CustomerNameInput"
      Attribute: Watermark="Name"
      Attribute: Margin="5"
    XAML Element: xctk
      Attribute: x:Name="CustomerEmailInput"
      Attribute: Watermark="Email"
      Attribute: Margin="5"
    XAML Element: xctk
      Attribute: x:Name="CustomerContactInput"
      Attribute: Watermark="Customer
      Attribute: Margin="5"
    XAML Element: xctk
      Attribute: x:Name="CustomerPhoneInput"
      Attribute: Watermark="Phone"
      Attribute: Margin="5"
    XAML Element: xctk
      Attribute: x:Name="CustomerAddressInput"
      Attribute: Watermark="Address"
      Attribute: Margin="5"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: HorizontalAlignment="Center"
    XAML Element: Button
      Attribute: Content="Add"
      Attribute: Click="AddCustomerButton_Click"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Update"
      Attribute: Click="UpdateCustomerButton_Click"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Delete"
      Attribute: Click="DeleteCustomerButton_Click"
      Attribute: Margin="5"
    XAML Element: ListView
      Attribute: x:Name="CustomerList"
      Attribute: Grid.Column="1"
      Attribute: ItemsSource="{Binding
      Attribute: Margin="5"
    XAML Element: ListView
    XAML Element: GridView
    XAML Element: GridViewColumn
      Attribute: Header="Name"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="150"
    XAML Element: GridViewColumn
      Attribute: Header="Email"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="200"
    XAML Element: GridViewColumn
      Attribute: Header="Contact"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="200"
    XAML Element: GridViewColumn
      Attribute: Header="Phone"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="120"
    XAML Element: GridViewColumn
      Attribute: Header="Address"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="250"
    XAML Element: TabItem
      Attribute: Header="Rentals"
    XAML Element: Grid
    XAML Element: Grid
    XAML Element: RowDefinition
      Attribute: Height="Auto"
    XAML Element: RowDefinition
      Attribute: Height="Auto"
    XAML Element: RowDefinition
      Attribute: Height="*"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="10"
      Attribute: Grid.Row="0"
    XAML Element: xctk
      Attribute: x:Name="ToolIDForRentalInput"
      Attribute: Watermark="Tool
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: xctk
      Attribute: x:Name="CustomerIDForRentalInput"
      Attribute: Watermark="Customer
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: xctk
      Attribute: x:Name="DueDateInput"
      Attribute: Watermark="Due
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: Button
      Attribute: Content="Rent
      Attribute: Click="RentToolButton_Click"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Return
      Attribute: Click="ReturnToolButton_Click"
      Attribute: Margin="5"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="10"
      Attribute: Grid.Row="1"
    XAML Element: xctk
      Attribute: x:Name="RentalIDInput"
      Attribute: Watermark="Rental
      Attribute: Margin="5"
      Attribute: Width="100"
    XAML Element: xctk
      Attribute: x:Name="NewDueDateInput"
      Attribute: Watermark="New
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: Button
      Attribute: Content="Extend
      Attribute: Click="ExtendRentalButton_Click"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Load
      Attribute: Click="LoadOverdueRentals_Click"
      Attribute: Margin="5"
    XAML Element: ListView
      Attribute: x:Name="RentalsList"
      Attribute: ItemsSource="{Binding
      Attribute: Grid.Row="2"
      Attribute: Margin="10"
    XAML Element: ListView
    XAML Element: GridView
    XAML Element: GridViewColumn
      Attribute: Header="Rental
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Tool
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Customer
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="100"
    XAML Element: GridViewColumn
      Attribute: Header="Rental
      Attribute: DisplayMemberBinding="{Binding
      Attribute: StringFormat=\{0:yyyy-MM-dd\}}"
      Attribute: Width="150"
    XAML Element: GridViewColumn
      Attribute: Header="Due
      Attribute: DisplayMemberBinding="{Binding
      Attribute: StringFormat=\{0:yyyy-MM-dd\}}"
      Attribute: Width="150"
    XAML Element: GridViewColumn
      Attribute: Header="Return
      Attribute: DisplayMemberBinding="{Binding
      Attribute: StringFormat=\{0:yyyy-MM-dd\}}"
      Attribute: Width="150"
    XAML Element: TabItem
      Attribute: Header="Users"
    XAML Element: Grid
      Attribute: Margin="5"
    XAML Element: Grid
    XAML Element: ColumnDefinition
      Attribute: Width="250"
    XAML Element: ColumnDefinition
      Attribute: Width="*"
    XAML Element: StackPanel
      Attribute: Grid.Column="0"
    XAML Element: TextBlock
      Attribute: Text="Users"
      Attribute: FontSize="16"
      Attribute: FontWeight="Bold"
      Attribute: Margin="5"
    XAML Element: ListView
    XAML Element: GridView
    XAML Element: GridViewColumn
      Attribute: Header="Name"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="160"
    XAML Element: GridViewColumn
      Attribute: Header="Admin"
      Attribute: Width="70"
    XAML Element: GridViewColumn
    XAML Element: DataTemplate
    XAML Element: CheckBox
      Attribute: IsChecked="{Binding
      Attribute: IsEnabled="False"
      Attribute: HorizontalAlignment="Center"
    XAML Element: StackPanel
      Attribute: Grid.Column="1"
      Attribute: Margin="10"
      Attribute: VerticalAlignment="Top"
    XAML Element: TextBlock
      Attribute: Text="User
      Attribute: FontSize="16"
      Attribute: FontWeight="Bold"
      Attribute: Margin="5"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: Border
      Attribute: Width="100"
      Attribute: Height="100"
      Attribute: BorderBrush="Gray"
      Attribute: BorderThickness="1"
    XAML Element: Button
      Attribute: Content="Change
      Attribute: Click="UploadUserPhotoButton_Click"
      Attribute: Margin="10,0,0,0"
      Attribute: VerticalAlignment="Center"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: TextBlock
      Attribute: Text="User
      Attribute: Width="100"
      Attribute: VerticalAlignment="Center"
    XAML Element: TextBox
      Attribute: Text="{Binding
      Attribute: Mode=TwoWay}"
      Attribute: Width="200"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: TextBlock
      Attribute: Text="Password:"
      Attribute: Width="100"
      Attribute: VerticalAlignment="Center"
    XAML Element: PasswordBox
      Attribute: x:Name="PasswordBox"
      Attribute: Width="200"
      Attribute: PasswordChanged="PasswordBox_PasswordChanged"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: TextBlock
      Attribute: Text="Email:"
      Attribute: Width="100"
      Attribute: VerticalAlignment="Center"
    XAML Element: TextBox
      Attribute: Text="{Binding
      Attribute: Mode=TwoWay}"
      Attribute: Width="200"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: TextBlock
      Attribute: Text="Phone:"
      Attribute: Width="100"
      Attribute: VerticalAlignment="Center"
    XAML Element: TextBox
      Attribute: Text="{Binding
      Attribute: Mode=TwoWay}"
      Attribute: Width="200"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: TextBlock
      Attribute: Text="Address:"
      Attribute: Width="100"
      Attribute: VerticalAlignment="Center"
    XAML Element: TextBox
      Attribute: Text="{Binding
      Attribute: Mode=TwoWay}"
      Attribute: Width="200"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: TextBlock
      Attribute: Text="Role:"
      Attribute: Width="100"
      Attribute: VerticalAlignment="Center"
    XAML Element: TextBox
      Attribute: Text="{Binding
      Attribute: Mode=TwoWay}"
      Attribute: Width="200"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: TextBlock
      Attribute: Text="Is
      Attribute: Width="100"
      Attribute: VerticalAlignment="Center"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: HorizontalAlignment="Left"
      Attribute: Margin="10"
    XAML Element: Button
      Attribute: Content="New
      Attribute: Click="NewUserButton_Click"
      Attribute: Width="100"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Delete
      Attribute: Click="DeleteUserButton_Click"
      Attribute: Width="100"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Save"
      Attribute: Click="SaveUserButton_Click"
      Attribute: Width="100"
      Attribute: Margin="5"
    XAML Element: TabItem
      Attribute: Header="Settings"
    XAML Element: StackPanel
      Attribute: Orientation="Vertical"
      Attribute: Margin="10"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="5"
    XAML Element: TextBlock
      Attribute: Text="Company
      Attribute: FontWeight="Bold"
      Attribute: Margin="5"
    XAML Element: TabItem
      Attribute: Header="Import/Export"
    XAML Element: StackPanel
      Attribute: Margin="10"
    XAML Element: TextBlock
      Attribute: Text="Import
      Attribute: FontWeight="Bold"
      Attribute: FontSize="16"
      Attribute: Margin="5"
    XAML Element: TextBlock
      Attribute: Text="Tools"
      Attribute: FontWeight="Bold"
      Attribute: Margin="5,10,5,5"
    XAML Element: WrapPanel
    XAML Element: TextBlock
      Attribute: Text="Customers"
      Attribute: FontWeight="Bold"
      Attribute: Margin="5,20,5,5"
    XAML Element: WrapPanel
    XAML Element: TabItem
      Attribute: Header="Activity
    XAML Element: Grid
    XAML Element: StackPanel
      Attribute: Orientation="Horizontal"
      Attribute: Margin="10"
    XAML Element: Button
      Attribute: Content="Refresh
      Attribute: Click="RefreshLogsButton_Click"
      Attribute: Margin="5"
    XAML Element: Button
      Attribute: Content="Purge
      Attribute: Click="PurgeLogsButton_Click"
      Attribute: Margin="5"
    XAML Element: ListView
      Attribute: x:Name="ActivityLogsList"
      Attribute: Margin="10"
      Attribute: VerticalAlignment="Stretch"
    XAML Element: ListView
    XAML Element: GridView
    XAML Element: GridViewColumn
      Attribute: Header="Log
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="80"
    XAML Element: GridViewColumn
      Attribute: Header="User
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="80"
    XAML Element: GridViewColumn
      Attribute: Header="User
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="150"
    XAML Element: GridViewColumn
      Attribute: Header="Action"
      Attribute: DisplayMemberBinding="{Binding
      Attribute: Width="400"
    XAML Element: GridViewColumn
      Attribute: Header="Timestamp"
      Attribute: Width="150"
    XAML Element: GridViewColumn
    XAML Element: DataTemplate
    XAML Element: TextBlock
      Attribute: Text="{Binding
      Attribute: StringFormat=\{0:yyyy-MM-dd
    XAML Element: TabItem
      Attribute: Header="Reports"
    XAML Element: ScrollViewer
      Attribute: VerticalScrollBarVisibility="Auto"
    XAML Element: StackPanel
      Attribute: Margin="10"
    XAML Element: TextBlock
      Attribute: Text="Generate
      Attribute: FontWeight="Bold"
      Attribute: FontSize="16"
      Attribute: Margin="0,0,0,10"
    XAML Element: WrapPanel
      Attribute: Orientation="Horizontal"
    XAML Element: Button
      Attribute: Content="Print
      Attribute: Click="PrintInventoryReport_Click"
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: Button
      Attribute: Content="Print
      Attribute: Click="PrintActiveRentalsReport_Click"
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: Button
      Attribute: Content="Print
      Attribute: Click="PrintFullRentalReport_Click"
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: WrapPanel
      Attribute: Orientation="Horizontal"
    XAML Element: Button
      Attribute: Content="Print
      Attribute: Click="PrintActivityLogReport_Click"
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: Button
      Attribute: Content="Print
      Attribute: Click="PrintCustomerReport_Click"
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: Button
      Attribute: Content="Print
      Attribute: Click="PrintUserReport_Click"
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: Button
      Attribute: Content="Print
      Attribute: Click="PrintSummaryReport_Click"
      Attribute: Margin="5"
      Attribute: Width="200"
    XAML Element: StatusBar
      Attribute: Grid.Row="1"
      Attribute: Height="25"
      Attribute: Background="LightGray"
    XAML Element: StatusBarItem
      Attribute: Content="Ready"

  File: PasswordPromptWindow.xaml
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Views\PasswordPromptWindow.xaml
    XAML Element: Grid
      Attribute: Margin="20"
    XAML Element: Grid
    XAML Element: RowDefinition
      Attribute: Height="Auto"
    XAML Element: RowDefinition
      Attribute: Height="Auto"
    XAML Element: RowDefinition
      Attribute: Height="Auto"
    XAML Element: RowDefinition
      Attribute: Height="Auto"
    XAML Element: RowDefinition
      Attribute: Height="Auto"

  File: PrintPreviewWindow.xaml
  Path: C:\Users\GarettDaly\source\repos\BaccioOFDeath\ToolManagementAppV2\ToolManagementAppV2\Views\PrintPreviewWindow.xaml
    XAML Element: DockPanel
      Attribute: Margin="10"
    XAML Element: Border
      Attribute: DockPanel.Dock="Top"
      Attribute: Background="#DDD"
      Attribute: Padding="10"
    XAML Element: Grid
    XAML Element: Grid
    XAML Element: ColumnDefinition
      Attribute: Width="Auto"
    XAML Element: ColumnDefinition
      Attribute: Width="*"
    XAML Element: ColumnDefinition
      Attribute: Width="Auto"
    XAML Element: StatusBarItem
      Attribute: Content="Ready


